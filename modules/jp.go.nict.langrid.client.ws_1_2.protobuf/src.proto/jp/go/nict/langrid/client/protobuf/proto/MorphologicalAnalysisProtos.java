// Generated by the protocol buffer compiler.  DO NOT EDIT!

package jp.go.nict.langrid.client.protobuf.proto;

public final class MorphologicalAnalysisProtos {
  private MorphologicalAnalysisProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Morpheme extends
      com.google.protobuf.GeneratedMessage {
    // Use Morpheme.newBuilder() to construct.
    private Morpheme() {}
    
    private static final Morpheme defaultInstance = new Morpheme();
    public static Morpheme getDefaultInstance() {
      return defaultInstance;
    }
    
    public Morpheme getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.internal_static_morphologicalanalysis_Morpheme_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.internal_static_morphologicalanalysis_Morpheme_fieldAccessorTable;
    }
    
    // required string word = 1;
    public static final int WORD_FIELD_NUMBER = 1;
    private boolean hasWord;
    private java.lang.String word_ = "";
    public boolean hasWord() { return hasWord; }
    public java.lang.String getWord() { return word_; }
    
    // required string lemma = 2;
    public static final int LEMMA_FIELD_NUMBER = 2;
    private boolean hasLemma;
    private java.lang.String lemma_ = "";
    public boolean hasLemma() { return hasLemma; }
    public java.lang.String getLemma() { return lemma_; }
    
    // required string partOfSpeech = 3;
    public static final int PARTOFSPEECH_FIELD_NUMBER = 3;
    private boolean hasPartOfSpeech;
    private java.lang.String partOfSpeech_ = "";
    public boolean hasPartOfSpeech() { return hasPartOfSpeech; }
    public java.lang.String getPartOfSpeech() { return partOfSpeech_; }
    
    public final boolean isInitialized() {
      if (!hasWord) return false;
      if (!hasLemma) return false;
      if (!hasPartOfSpeech) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasWord()) {
        output.writeString(1, getWord());
      }
      if (hasLemma()) {
        output.writeString(2, getLemma());
      }
      if (hasPartOfSpeech()) {
        output.writeString(3, getPartOfSpeech());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWord()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getWord());
      }
      if (hasLemma()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getLemma());
      }
      if (hasPartOfSpeech()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPartOfSpeech());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme.getDefaultInstance()) return this;
        if (other.hasWord()) {
          setWord(other.getWord());
        }
        if (other.hasLemma()) {
          setLemma(other.getLemma());
        }
        if (other.hasPartOfSpeech()) {
          setPartOfSpeech(other.getPartOfSpeech());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setWord(input.readString());
              break;
            }
            case 18: {
              setLemma(input.readString());
              break;
            }
            case 26: {
              setPartOfSpeech(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string word = 1;
      public boolean hasWord() {
        return result.hasWord();
      }
      public java.lang.String getWord() {
        return result.getWord();
      }
      public Builder setWord(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWord = true;
        result.word_ = value;
        return this;
      }
      public Builder clearWord() {
        result.hasWord = false;
        result.word_ = getDefaultInstance().getWord();
        return this;
      }
      
      // required string lemma = 2;
      public boolean hasLemma() {
        return result.hasLemma();
      }
      public java.lang.String getLemma() {
        return result.getLemma();
      }
      public Builder setLemma(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLemma = true;
        result.lemma_ = value;
        return this;
      }
      public Builder clearLemma() {
        result.hasLemma = false;
        result.lemma_ = getDefaultInstance().getLemma();
        return this;
      }
      
      // required string partOfSpeech = 3;
      public boolean hasPartOfSpeech() {
        return result.hasPartOfSpeech();
      }
      public java.lang.String getPartOfSpeech() {
        return result.getPartOfSpeech();
      }
      public Builder setPartOfSpeech(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPartOfSpeech = true;
        result.partOfSpeech_ = value;
        return this;
      }
      public Builder clearPartOfSpeech() {
        result.hasPartOfSpeech = false;
        result.partOfSpeech_ = getDefaultInstance().getPartOfSpeech();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.internalForceInit();
    }
  }
  
  public static final class AnalyzeRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use AnalyzeRequest.newBuilder() to construct.
    private AnalyzeRequest() {}
    
    private static final AnalyzeRequest defaultInstance = new AnalyzeRequest();
    public static AnalyzeRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public AnalyzeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.internal_static_morphologicalanalysis_AnalyzeRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.internal_static_morphologicalanalysis_AnalyzeRequest_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    // required string language = 2;
    public static final int LANGUAGE_FIELD_NUMBER = 2;
    private boolean hasLanguage;
    private java.lang.String language_ = "";
    public boolean hasLanguage() { return hasLanguage; }
    public java.lang.String getLanguage() { return language_; }
    
    // required string text = 3;
    public static final int TEXT_FIELD_NUMBER = 3;
    private boolean hasText;
    private java.lang.String text_ = "";
    public boolean hasText() { return hasText; }
    public java.lang.String getText() { return text_; }
    
    public final boolean isInitialized() {
      if (!hasLanguage) return false;
      if (!hasText) return false;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      if (hasLanguage()) {
        output.writeString(2, getLanguage());
      }
      if (hasText()) {
        output.writeString(3, getText());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasLanguage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getLanguage());
      }
      if (hasText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getText());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (other.hasLanguage()) {
          setLanguage(other.getLanguage());
        }
        if (other.hasText()) {
          setText(other.getText());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setLanguage(input.readString());
              break;
            }
            case 26: {
              setText(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required string language = 2;
      public boolean hasLanguage() {
        return result.hasLanguage();
      }
      public java.lang.String getLanguage() {
        return result.getLanguage();
      }
      public Builder setLanguage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLanguage = true;
        result.language_ = value;
        return this;
      }
      public Builder clearLanguage() {
        result.hasLanguage = false;
        result.language_ = getDefaultInstance().getLanguage();
        return this;
      }
      
      // required string text = 3;
      public boolean hasText() {
        return result.hasText();
      }
      public java.lang.String getText() {
        return result.getText();
      }
      public Builder setText(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder clearText() {
        result.hasText = false;
        result.text_ = getDefaultInstance().getText();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.internalForceInit();
    }
  }
  
  public static final class AnalyzeResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use AnalyzeResponse.newBuilder() to construct.
    private AnalyzeResponse() {}
    
    private static final AnalyzeResponse defaultInstance = new AnalyzeResponse();
    public static AnalyzeResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public AnalyzeResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.internal_static_morphologicalanalysis_AnalyzeResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.internal_static_morphologicalanalysis_AnalyzeResponse_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    // optional .Fault fault = 2;
    public static final int FAULT_FIELD_NUMBER = 2;
    private boolean hasFault;
    private jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
    public boolean hasFault() { return hasFault; }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() { return fault_; }
    
    // repeated .morphologicalanalysis.Morpheme result = 3;
    public static final int RESULT_FIELD_NUMBER = 3;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme> result_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme> getResultList() {
      return result_;
    }
    public int getResultCount() { return result_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme getResult(int index) {
      return result_.get(index);
    }
    
    public final boolean isInitialized() {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasFault()) {
        if (!getFault().isInitialized()) return false;
      }
      for (jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme element : getResultList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      if (hasFault()) {
        output.writeMessage(2, getFault());
      }
      for (jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme element : getResultList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasFault()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFault());
      }
      for (jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme element : getResultList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        if (result.result_ != java.util.Collections.EMPTY_LIST) {
          result.result_ =
            java.util.Collections.unmodifiableList(result.result_);
        }
        jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (other.hasFault()) {
          mergeFault(other.getFault());
        }
        if (!other.result_.isEmpty()) {
          if (result.result_.isEmpty()) {
            result.result_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme>();
          }
          result.result_.addAll(other.result_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 18: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder();
              if (hasFault()) {
                subBuilder.mergeFrom(getFault());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFault(subBuilder.buildPartial());
              break;
            }
            case 26: {
              jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addResult(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .Fault fault = 2;
      public boolean hasFault() {
        return result.hasFault();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() {
        return result.getFault();
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFault = true;
        result.fault_ = value;
        return this;
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder builderForValue) {
        result.hasFault = true;
        result.fault_ = builderForValue.build();
        return this;
      }
      public Builder mergeFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (result.hasFault() &&
            result.fault_ != jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance()) {
          result.fault_ =
            jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder(result.fault_).mergeFrom(value).buildPartial();
        } else {
          result.fault_ = value;
        }
        result.hasFault = true;
        return this;
      }
      public Builder clearFault() {
        result.hasFault = false;
        result.fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
        return this;
      }
      
      // repeated .morphologicalanalysis.Morpheme result = 3;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme> getResultList() {
        return java.util.Collections.unmodifiableList(result.result_);
      }
      public int getResultCount() {
        return result.getResultCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme getResult(int index) {
        return result.getResult(index);
      }
      public Builder setResult(int index, jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.result_.set(index, value);
        return this;
      }
      public Builder setResult(int index, jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme.Builder builderForValue) {
        result.result_.set(index, builderForValue.build());
        return this;
      }
      public Builder addResult(jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.result_.isEmpty()) {
          result.result_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme>();
        }
        result.result_.add(value);
        return this;
      }
      public Builder addResult(jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme.Builder builderForValue) {
        if (result.result_.isEmpty()) {
          result.result_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme>();
        }
        result.result_.add(builderForValue.build());
        return this;
      }
      public Builder addAllResult(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme> values) {
        if (result.result_.isEmpty()) {
          result.result_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme>();
        }
        super.addAll(values, result.result_);
        return this;
      }
      public Builder clearResult() {
        result.result_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.internalForceInit();
    }
  }
  
  public static abstract class Service
      implements com.google.protobuf.Service {
    protected Service() {}
    
    public interface Interface {
      public abstract void analyze(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new Service() {
        @Override
        public  void analyze(
            com.google.protobuf.RpcController controller,
            jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest request,
            com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse> done) {
          impl.analyze(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.analyze(controller, (jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void analyze(
        com.google.protobuf.RpcController controller,
        jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest request,
        com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.analyze(controller, (jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest)request,
            com.google.protobuf.RpcUtil.<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Service implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void analyze(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.class,
            jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse analyze(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse analyze(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest request)
          throws com.google.protobuf.ServiceException {
        return (jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_morphologicalanalysis_Morpheme_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_morphologicalanalysis_Morpheme_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_morphologicalanalysis_AnalyzeRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_morphologicalanalysis_AnalyzeRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_morphologicalanalysis_AnalyzeResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_morphologicalanalysis_AnalyzeResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033MorphologicalAnalysis.proto\022\025morpholog" +
      "icalanalysis\032\014common.proto\"=\n\010Morpheme\022\014" +
      "\n\004word\030\001 \002(\t\022\r\n\005lemma\030\002 \002(\t\022\024\n\014partOfSpe" +
      "ech\030\003 \002(\t\"J\n\016AnalyzeRequest\022\030\n\007headers\030\001" +
      " \003(\0132\007.Header\022\020\n\010language\030\002 \002(\t\022\014\n\004text\030" +
      "\003 \002(\t\"s\n\017AnalyzeResponse\022\030\n\007headers\030\001 \003(" +
      "\0132\007.Header\022\025\n\005fault\030\002 \001(\0132\006.Fault\022/\n\006res" +
      "ult\030\003 \003(\0132\037.morphologicalanalysis.Morphe" +
      "me2c\n\007Service\022X\n\007analyze\022%.morphological" +
      "analysis.AnalyzeRequest\032&.morphologicala",
      "nalysis.AnalyzeResponseBG\n(jp.go.nict.la" +
      "ngrid.client.protobuf.protoB\033Morphologic" +
      "alAnalysisProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_morphologicalanalysis_Morpheme_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_morphologicalanalysis_Morpheme_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_morphologicalanalysis_Morpheme_descriptor,
              new java.lang.String[] { "Word", "Lemma", "PartOfSpeech", },
              jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme.class,
              jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.Morpheme.Builder.class);
          internal_static_morphologicalanalysis_AnalyzeRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_morphologicalanalysis_AnalyzeRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_morphologicalanalysis_AnalyzeRequest_descriptor,
              new java.lang.String[] { "Headers", "Language", "Text", },
              jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest.class,
              jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeRequest.Builder.class);
          internal_static_morphologicalanalysis_AnalyzeResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_morphologicalanalysis_AnalyzeResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_morphologicalanalysis_AnalyzeResponse_descriptor,
              new java.lang.String[] { "Headers", "Fault", "Result", },
              jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.class,
              jp.go.nict.langrid.client.protobuf.proto.MorphologicalAnalysisProtos.AnalyzeResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          jp.go.nict.langrid.client.protobuf.proto.CommonProtos.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
