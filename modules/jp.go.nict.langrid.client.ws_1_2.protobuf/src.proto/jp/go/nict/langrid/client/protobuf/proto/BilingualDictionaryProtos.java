// Generated by the protocol buffer compiler.  DO NOT EDIT!

package jp.go.nict.langrid.client.protobuf.proto;

public final class BilingualDictionaryProtos {
  private BilingualDictionaryProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Translation extends
      com.google.protobuf.GeneratedMessage {
    // Use Translation.newBuilder() to construct.
    private Translation() {}
    
    private static final Translation defaultInstance = new Translation();
    public static Translation getDefaultInstance() {
      return defaultInstance;
    }
    
    public Translation getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.internal_static_bilingualdictionary_Translation_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.internal_static_bilingualdictionary_Translation_fieldAccessorTable;
    }
    
    // required string headWord = 1;
    public static final int HEADWORD_FIELD_NUMBER = 1;
    private boolean hasHeadWord;
    private java.lang.String headWord_ = "";
    public boolean hasHeadWord() { return hasHeadWord; }
    public java.lang.String getHeadWord() { return headWord_; }
    
    // repeated string targetWords = 2;
    public static final int TARGETWORDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> targetWords_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getTargetWordsList() {
      return targetWords_;
    }
    public int getTargetWordsCount() { return targetWords_.size(); }
    public java.lang.String getTargetWords(int index) {
      return targetWords_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasHeadWord) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasHeadWord()) {
        output.writeString(1, getHeadWord());
      }
      for (java.lang.String element : getTargetWordsList()) {
        output.writeString(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHeadWord()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getHeadWord());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getTargetWordsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTargetWordsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.targetWords_ != java.util.Collections.EMPTY_LIST) {
          result.targetWords_ =
            java.util.Collections.unmodifiableList(result.targetWords_);
        }
        jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation.getDefaultInstance()) return this;
        if (other.hasHeadWord()) {
          setHeadWord(other.getHeadWord());
        }
        if (!other.targetWords_.isEmpty()) {
          if (result.targetWords_.isEmpty()) {
            result.targetWords_ = new java.util.ArrayList<java.lang.String>();
          }
          result.targetWords_.addAll(other.targetWords_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setHeadWord(input.readString());
              break;
            }
            case 18: {
              addTargetWords(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string headWord = 1;
      public boolean hasHeadWord() {
        return result.hasHeadWord();
      }
      public java.lang.String getHeadWord() {
        return result.getHeadWord();
      }
      public Builder setHeadWord(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHeadWord = true;
        result.headWord_ = value;
        return this;
      }
      public Builder clearHeadWord() {
        result.hasHeadWord = false;
        result.headWord_ = getDefaultInstance().getHeadWord();
        return this;
      }
      
      // repeated string targetWords = 2;
      public java.util.List<java.lang.String> getTargetWordsList() {
        return java.util.Collections.unmodifiableList(result.targetWords_);
      }
      public int getTargetWordsCount() {
        return result.getTargetWordsCount();
      }
      public java.lang.String getTargetWords(int index) {
        return result.getTargetWords(index);
      }
      public Builder setTargetWords(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.targetWords_.set(index, value);
        return this;
      }
      public Builder addTargetWords(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.targetWords_.isEmpty()) {
          result.targetWords_ = new java.util.ArrayList<java.lang.String>();
        }
        result.targetWords_.add(value);
        return this;
      }
      public Builder addAllTargetWords(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.targetWords_.isEmpty()) {
          result.targetWords_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.targetWords_);
        return this;
      }
      public Builder clearTargetWords() {
        result.targetWords_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.internalForceInit();
    }
  }
  
  public static final class SearchRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SearchRequest.newBuilder() to construct.
    private SearchRequest() {}
    
    private static final SearchRequest defaultInstance = new SearchRequest();
    public static SearchRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SearchRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.internal_static_bilingualdictionary_SearchRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.internal_static_bilingualdictionary_SearchRequest_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    // required string headLang = 2;
    public static final int HEADLANG_FIELD_NUMBER = 2;
    private boolean hasHeadLang;
    private java.lang.String headLang_ = "";
    public boolean hasHeadLang() { return hasHeadLang; }
    public java.lang.String getHeadLang() { return headLang_; }
    
    // required string targetLang = 3;
    public static final int TARGETLANG_FIELD_NUMBER = 3;
    private boolean hasTargetLang;
    private java.lang.String targetLang_ = "";
    public boolean hasTargetLang() { return hasTargetLang; }
    public java.lang.String getTargetLang() { return targetLang_; }
    
    // required string headWord = 4;
    public static final int HEADWORD_FIELD_NUMBER = 4;
    private boolean hasHeadWord;
    private java.lang.String headWord_ = "";
    public boolean hasHeadWord() { return hasHeadWord; }
    public java.lang.String getHeadWord() { return headWord_; }
    
    // required string matchingMethod = 5;
    public static final int MATCHINGMETHOD_FIELD_NUMBER = 5;
    private boolean hasMatchingMethod;
    private java.lang.String matchingMethod_ = "";
    public boolean hasMatchingMethod() { return hasMatchingMethod; }
    public java.lang.String getMatchingMethod() { return matchingMethod_; }
    
    public final boolean isInitialized() {
      if (!hasHeadLang) return false;
      if (!hasTargetLang) return false;
      if (!hasHeadWord) return false;
      if (!hasMatchingMethod) return false;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      if (hasHeadLang()) {
        output.writeString(2, getHeadLang());
      }
      if (hasTargetLang()) {
        output.writeString(3, getTargetLang());
      }
      if (hasHeadWord()) {
        output.writeString(4, getHeadWord());
      }
      if (hasMatchingMethod()) {
        output.writeString(5, getMatchingMethod());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasHeadLang()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getHeadLang());
      }
      if (hasTargetLang()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getTargetLang());
      }
      if (hasHeadWord()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getHeadWord());
      }
      if (hasMatchingMethod()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getMatchingMethod());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (other.hasHeadLang()) {
          setHeadLang(other.getHeadLang());
        }
        if (other.hasTargetLang()) {
          setTargetLang(other.getTargetLang());
        }
        if (other.hasHeadWord()) {
          setHeadWord(other.getHeadWord());
        }
        if (other.hasMatchingMethod()) {
          setMatchingMethod(other.getMatchingMethod());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setHeadLang(input.readString());
              break;
            }
            case 26: {
              setTargetLang(input.readString());
              break;
            }
            case 34: {
              setHeadWord(input.readString());
              break;
            }
            case 42: {
              setMatchingMethod(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required string headLang = 2;
      public boolean hasHeadLang() {
        return result.hasHeadLang();
      }
      public java.lang.String getHeadLang() {
        return result.getHeadLang();
      }
      public Builder setHeadLang(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHeadLang = true;
        result.headLang_ = value;
        return this;
      }
      public Builder clearHeadLang() {
        result.hasHeadLang = false;
        result.headLang_ = getDefaultInstance().getHeadLang();
        return this;
      }
      
      // required string targetLang = 3;
      public boolean hasTargetLang() {
        return result.hasTargetLang();
      }
      public java.lang.String getTargetLang() {
        return result.getTargetLang();
      }
      public Builder setTargetLang(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTargetLang = true;
        result.targetLang_ = value;
        return this;
      }
      public Builder clearTargetLang() {
        result.hasTargetLang = false;
        result.targetLang_ = getDefaultInstance().getTargetLang();
        return this;
      }
      
      // required string headWord = 4;
      public boolean hasHeadWord() {
        return result.hasHeadWord();
      }
      public java.lang.String getHeadWord() {
        return result.getHeadWord();
      }
      public Builder setHeadWord(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHeadWord = true;
        result.headWord_ = value;
        return this;
      }
      public Builder clearHeadWord() {
        result.hasHeadWord = false;
        result.headWord_ = getDefaultInstance().getHeadWord();
        return this;
      }
      
      // required string matchingMethod = 5;
      public boolean hasMatchingMethod() {
        return result.hasMatchingMethod();
      }
      public java.lang.String getMatchingMethod() {
        return result.getMatchingMethod();
      }
      public Builder setMatchingMethod(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMatchingMethod = true;
        result.matchingMethod_ = value;
        return this;
      }
      public Builder clearMatchingMethod() {
        result.hasMatchingMethod = false;
        result.matchingMethod_ = getDefaultInstance().getMatchingMethod();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.internalForceInit();
    }
  }
  
  public static final class SearchResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use SearchResponse.newBuilder() to construct.
    private SearchResponse() {}
    
    private static final SearchResponse defaultInstance = new SearchResponse();
    public static SearchResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SearchResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.internal_static_bilingualdictionary_SearchResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.internal_static_bilingualdictionary_SearchResponse_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    // optional .Fault fault = 2;
    public static final int FAULT_FIELD_NUMBER = 2;
    private boolean hasFault;
    private jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
    public boolean hasFault() { return hasFault; }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() { return fault_; }
    
    // repeated .bilingualdictionary.Translation result = 3;
    public static final int RESULT_FIELD_NUMBER = 3;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation> result_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation> getResultList() {
      return result_;
    }
    public int getResultCount() { return result_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation getResult(int index) {
      return result_.get(index);
    }
    
    public final boolean isInitialized() {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasFault()) {
        if (!getFault().isInitialized()) return false;
      }
      for (jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation element : getResultList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      if (hasFault()) {
        output.writeMessage(2, getFault());
      }
      for (jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation element : getResultList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasFault()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFault());
      }
      for (jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation element : getResultList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        if (result.result_ != java.util.Collections.EMPTY_LIST) {
          result.result_ =
            java.util.Collections.unmodifiableList(result.result_);
        }
        jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (other.hasFault()) {
          mergeFault(other.getFault());
        }
        if (!other.result_.isEmpty()) {
          if (result.result_.isEmpty()) {
            result.result_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation>();
          }
          result.result_.addAll(other.result_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 18: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder();
              if (hasFault()) {
                subBuilder.mergeFrom(getFault());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFault(subBuilder.buildPartial());
              break;
            }
            case 26: {
              jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addResult(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .Fault fault = 2;
      public boolean hasFault() {
        return result.hasFault();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() {
        return result.getFault();
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFault = true;
        result.fault_ = value;
        return this;
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder builderForValue) {
        result.hasFault = true;
        result.fault_ = builderForValue.build();
        return this;
      }
      public Builder mergeFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (result.hasFault() &&
            result.fault_ != jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance()) {
          result.fault_ =
            jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder(result.fault_).mergeFrom(value).buildPartial();
        } else {
          result.fault_ = value;
        }
        result.hasFault = true;
        return this;
      }
      public Builder clearFault() {
        result.hasFault = false;
        result.fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
        return this;
      }
      
      // repeated .bilingualdictionary.Translation result = 3;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation> getResultList() {
        return java.util.Collections.unmodifiableList(result.result_);
      }
      public int getResultCount() {
        return result.getResultCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation getResult(int index) {
        return result.getResult(index);
      }
      public Builder setResult(int index, jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.result_.set(index, value);
        return this;
      }
      public Builder setResult(int index, jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation.Builder builderForValue) {
        result.result_.set(index, builderForValue.build());
        return this;
      }
      public Builder addResult(jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.result_.isEmpty()) {
          result.result_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation>();
        }
        result.result_.add(value);
        return this;
      }
      public Builder addResult(jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation.Builder builderForValue) {
        if (result.result_.isEmpty()) {
          result.result_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation>();
        }
        result.result_.add(builderForValue.build());
        return this;
      }
      public Builder addAllResult(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation> values) {
        if (result.result_.isEmpty()) {
          result.result_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation>();
        }
        super.addAll(values, result.result_);
        return this;
      }
      public Builder clearResult() {
        result.result_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.internalForceInit();
    }
  }
  
  public static abstract class Service
      implements com.google.protobuf.Service {
    protected Service() {}
    
    public interface Interface {
      public abstract void search(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new Service() {
        @Override
        public  void search(
            com.google.protobuf.RpcController controller,
            jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest request,
            com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse> done) {
          impl.search(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.search(controller, (jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void search(
        com.google.protobuf.RpcController controller,
        jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest request,
        com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.search(controller, (jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest)request,
            com.google.protobuf.RpcUtil.<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Service implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void search(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.class,
            jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse search(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse search(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest request)
          throws com.google.protobuf.ServiceException {
        return (jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bilingualdictionary_Translation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bilingualdictionary_Translation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bilingualdictionary_SearchRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bilingualdictionary_SearchRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bilingualdictionary_SearchResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bilingualdictionary_SearchResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031BilingualDictionary.proto\022\023bilingualdi" +
      "ctionary\032\014common.proto\"4\n\013Translation\022\020\n" +
      "\010headWord\030\001 \002(\t\022\023\n\013targetWords\030\002 \003(\t\"y\n\r" +
      "SearchRequest\022\030\n\007headers\030\001 \003(\0132\007.Header\022" +
      "\020\n\010headLang\030\002 \002(\t\022\022\n\ntargetLang\030\003 \002(\t\022\020\n" +
      "\010headWord\030\004 \002(\t\022\026\n\016matchingMethod\030\005 \002(\t\"" +
      "s\n\016SearchResponse\022\030\n\007headers\030\001 \003(\0132\007.Hea" +
      "der\022\025\n\005fault\030\002 \001(\0132\006.Fault\0220\n\006result\030\003 \003" +
      "(\0132 .bilingualdictionary.Translation2\\\n\007" +
      "Service\022Q\n\006search\022\".bilingualdictionary.",
      "SearchRequest\032#.bilingualdictionary.Sear" +
      "chResponseBE\n(jp.go.nict.langrid.client." +
      "protobuf.protoB\031BilingualDictionaryProto" +
      "s"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bilingualdictionary_Translation_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bilingualdictionary_Translation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bilingualdictionary_Translation_descriptor,
              new java.lang.String[] { "HeadWord", "TargetWords", },
              jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation.class,
              jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.Translation.Builder.class);
          internal_static_bilingualdictionary_SearchRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bilingualdictionary_SearchRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bilingualdictionary_SearchRequest_descriptor,
              new java.lang.String[] { "Headers", "HeadLang", "TargetLang", "HeadWord", "MatchingMethod", },
              jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest.class,
              jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchRequest.Builder.class);
          internal_static_bilingualdictionary_SearchResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bilingualdictionary_SearchResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bilingualdictionary_SearchResponse_descriptor,
              new java.lang.String[] { "Headers", "Fault", "Result", },
              jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.class,
              jp.go.nict.langrid.client.protobuf.proto.BilingualDictionaryProtos.SearchResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          jp.go.nict.langrid.client.protobuf.proto.CommonProtos.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
