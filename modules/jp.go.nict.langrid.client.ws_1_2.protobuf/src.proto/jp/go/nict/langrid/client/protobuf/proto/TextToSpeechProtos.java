// Generated by the protocol buffer compiler.  DO NOT EDIT!

package jp.go.nict.langrid.client.protobuf.proto;

public final class TextToSpeechProtos {
  private TextToSpeechProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class SpeakRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SpeakRequest.newBuilder() to construct.
    private SpeakRequest() {}
    
    private static final SpeakRequest defaultInstance = new SpeakRequest();
    public static SpeakRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SpeakRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_SpeakRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_SpeakRequest_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    // required string language = 2;
    public static final int LANGUAGE_FIELD_NUMBER = 2;
    private boolean hasLanguage;
    private java.lang.String language_ = "";
    public boolean hasLanguage() { return hasLanguage; }
    public java.lang.String getLanguage() { return language_; }
    
    // required string text = 3;
    public static final int TEXT_FIELD_NUMBER = 3;
    private boolean hasText;
    private java.lang.String text_ = "";
    public boolean hasText() { return hasText; }
    public java.lang.String getText() { return text_; }
    
    // required string voiceType = 4;
    public static final int VOICETYPE_FIELD_NUMBER = 4;
    private boolean hasVoiceType;
    private java.lang.String voiceType_ = "";
    public boolean hasVoiceType() { return hasVoiceType; }
    public java.lang.String getVoiceType() { return voiceType_; }
    
    // required string audioTypeType = 5;
    public static final int AUDIOTYPETYPE_FIELD_NUMBER = 5;
    private boolean hasAudioTypeType;
    private java.lang.String audioTypeType_ = "";
    public boolean hasAudioTypeType() { return hasAudioTypeType; }
    public java.lang.String getAudioTypeType() { return audioTypeType_; }
    
    public final boolean isInitialized() {
      if (!hasLanguage) return false;
      if (!hasText) return false;
      if (!hasVoiceType) return false;
      if (!hasAudioTypeType) return false;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      if (hasLanguage()) {
        output.writeString(2, getLanguage());
      }
      if (hasText()) {
        output.writeString(3, getText());
      }
      if (hasVoiceType()) {
        output.writeString(4, getVoiceType());
      }
      if (hasAudioTypeType()) {
        output.writeString(5, getAudioTypeType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasLanguage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getLanguage());
      }
      if (hasText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getText());
      }
      if (hasVoiceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getVoiceType());
      }
      if (hasAudioTypeType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getAudioTypeType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (other.hasLanguage()) {
          setLanguage(other.getLanguage());
        }
        if (other.hasText()) {
          setText(other.getText());
        }
        if (other.hasVoiceType()) {
          setVoiceType(other.getVoiceType());
        }
        if (other.hasAudioTypeType()) {
          setAudioTypeType(other.getAudioTypeType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setLanguage(input.readString());
              break;
            }
            case 26: {
              setText(input.readString());
              break;
            }
            case 34: {
              setVoiceType(input.readString());
              break;
            }
            case 42: {
              setAudioTypeType(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required string language = 2;
      public boolean hasLanguage() {
        return result.hasLanguage();
      }
      public java.lang.String getLanguage() {
        return result.getLanguage();
      }
      public Builder setLanguage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLanguage = true;
        result.language_ = value;
        return this;
      }
      public Builder clearLanguage() {
        result.hasLanguage = false;
        result.language_ = getDefaultInstance().getLanguage();
        return this;
      }
      
      // required string text = 3;
      public boolean hasText() {
        return result.hasText();
      }
      public java.lang.String getText() {
        return result.getText();
      }
      public Builder setText(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder clearText() {
        result.hasText = false;
        result.text_ = getDefaultInstance().getText();
        return this;
      }
      
      // required string voiceType = 4;
      public boolean hasVoiceType() {
        return result.hasVoiceType();
      }
      public java.lang.String getVoiceType() {
        return result.getVoiceType();
      }
      public Builder setVoiceType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVoiceType = true;
        result.voiceType_ = value;
        return this;
      }
      public Builder clearVoiceType() {
        result.hasVoiceType = false;
        result.voiceType_ = getDefaultInstance().getVoiceType();
        return this;
      }
      
      // required string audioTypeType = 5;
      public boolean hasAudioTypeType() {
        return result.hasAudioTypeType();
      }
      public java.lang.String getAudioTypeType() {
        return result.getAudioTypeType();
      }
      public Builder setAudioTypeType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAudioTypeType = true;
        result.audioTypeType_ = value;
        return this;
      }
      public Builder clearAudioTypeType() {
        result.hasAudioTypeType = false;
        result.audioTypeType_ = getDefaultInstance().getAudioTypeType();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internalForceInit();
    }
  }
  
  public static final class SpeakResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use SpeakResponse.newBuilder() to construct.
    private SpeakResponse() {}
    
    private static final SpeakResponse defaultInstance = new SpeakResponse();
    public static SpeakResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SpeakResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_SpeakResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_SpeakResponse_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    // optional .Fault fault = 2;
    public static final int FAULT_FIELD_NUMBER = 2;
    private boolean hasFault;
    private jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
    public boolean hasFault() { return hasFault; }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() { return fault_; }
    
    // optional string voiceType = 3;
    public static final int VOICETYPE_FIELD_NUMBER = 3;
    private boolean hasVoiceType;
    private java.lang.String voiceType_ = "";
    public boolean hasVoiceType() { return hasVoiceType; }
    public java.lang.String getVoiceType() { return voiceType_; }
    
    // optional string audioType = 4;
    public static final int AUDIOTYPE_FIELD_NUMBER = 4;
    private boolean hasAudioType;
    private java.lang.String audioType_ = "";
    public boolean hasAudioType() { return hasAudioType; }
    public java.lang.String getAudioType() { return audioType_; }
    
    // optional bytes audio = 5;
    public static final int AUDIO_FIELD_NUMBER = 5;
    private boolean hasAudio;
    private com.google.protobuf.ByteString audio_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasAudio() { return hasAudio; }
    public com.google.protobuf.ByteString getAudio() { return audio_; }
    
    public final boolean isInitialized() {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasFault()) {
        if (!getFault().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      if (hasFault()) {
        output.writeMessage(2, getFault());
      }
      if (hasVoiceType()) {
        output.writeString(3, getVoiceType());
      }
      if (hasAudioType()) {
        output.writeString(4, getAudioType());
      }
      if (hasAudio()) {
        output.writeBytes(5, getAudio());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasFault()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFault());
      }
      if (hasVoiceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getVoiceType());
      }
      if (hasAudioType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getAudioType());
      }
      if (hasAudio()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getAudio());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (other.hasFault()) {
          mergeFault(other.getFault());
        }
        if (other.hasVoiceType()) {
          setVoiceType(other.getVoiceType());
        }
        if (other.hasAudioType()) {
          setAudioType(other.getAudioType());
        }
        if (other.hasAudio()) {
          setAudio(other.getAudio());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 18: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder();
              if (hasFault()) {
                subBuilder.mergeFrom(getFault());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFault(subBuilder.buildPartial());
              break;
            }
            case 26: {
              setVoiceType(input.readString());
              break;
            }
            case 34: {
              setAudioType(input.readString());
              break;
            }
            case 42: {
              setAudio(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .Fault fault = 2;
      public boolean hasFault() {
        return result.hasFault();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() {
        return result.getFault();
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFault = true;
        result.fault_ = value;
        return this;
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder builderForValue) {
        result.hasFault = true;
        result.fault_ = builderForValue.build();
        return this;
      }
      public Builder mergeFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (result.hasFault() &&
            result.fault_ != jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance()) {
          result.fault_ =
            jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder(result.fault_).mergeFrom(value).buildPartial();
        } else {
          result.fault_ = value;
        }
        result.hasFault = true;
        return this;
      }
      public Builder clearFault() {
        result.hasFault = false;
        result.fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
        return this;
      }
      
      // optional string voiceType = 3;
      public boolean hasVoiceType() {
        return result.hasVoiceType();
      }
      public java.lang.String getVoiceType() {
        return result.getVoiceType();
      }
      public Builder setVoiceType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVoiceType = true;
        result.voiceType_ = value;
        return this;
      }
      public Builder clearVoiceType() {
        result.hasVoiceType = false;
        result.voiceType_ = getDefaultInstance().getVoiceType();
        return this;
      }
      
      // optional string audioType = 4;
      public boolean hasAudioType() {
        return result.hasAudioType();
      }
      public java.lang.String getAudioType() {
        return result.getAudioType();
      }
      public Builder setAudioType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAudioType = true;
        result.audioType_ = value;
        return this;
      }
      public Builder clearAudioType() {
        result.hasAudioType = false;
        result.audioType_ = getDefaultInstance().getAudioType();
        return this;
      }
      
      // optional bytes audio = 5;
      public boolean hasAudio() {
        return result.hasAudio();
      }
      public com.google.protobuf.ByteString getAudio() {
        return result.getAudio();
      }
      public Builder setAudio(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAudio = true;
        result.audio_ = value;
        return this;
      }
      public Builder clearAudio() {
        result.hasAudio = false;
        result.audio_ = getDefaultInstance().getAudio();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internalForceInit();
    }
  }
  
  public static final class GetSupportedLanguagesRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GetSupportedLanguagesRequest.newBuilder() to construct.
    private GetSupportedLanguagesRequest() {}
    
    private static final GetSupportedLanguagesRequest defaultInstance = new GetSupportedLanguagesRequest();
    public static GetSupportedLanguagesRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetSupportedLanguagesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedLanguagesRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedLanguagesRequest_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    public final boolean isInitialized() {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internalForceInit();
    }
  }
  
  public static final class GetSupportedLanguagesResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GetSupportedLanguagesResponse.newBuilder() to construct.
    private GetSupportedLanguagesResponse() {}
    
    private static final GetSupportedLanguagesResponse defaultInstance = new GetSupportedLanguagesResponse();
    public static GetSupportedLanguagesResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetSupportedLanguagesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedLanguagesResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedLanguagesResponse_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    // optional .Fault fault = 2;
    public static final int FAULT_FIELD_NUMBER = 2;
    private boolean hasFault;
    private jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
    public boolean hasFault() { return hasFault; }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() { return fault_; }
    
    // repeated string results = 3;
    public static final int RESULTS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> results_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getResultsList() {
      return results_;
    }
    public int getResultsCount() { return results_.size(); }
    public java.lang.String getResults(int index) {
      return results_.get(index);
    }
    
    public final boolean isInitialized() {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasFault()) {
        if (!getFault().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      if (hasFault()) {
        output.writeMessage(2, getFault());
      }
      for (java.lang.String element : getResultsList()) {
        output.writeString(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasFault()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFault());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getResultsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getResultsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        if (result.results_ != java.util.Collections.EMPTY_LIST) {
          result.results_ =
            java.util.Collections.unmodifiableList(result.results_);
        }
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (other.hasFault()) {
          mergeFault(other.getFault());
        }
        if (!other.results_.isEmpty()) {
          if (result.results_.isEmpty()) {
            result.results_ = new java.util.ArrayList<java.lang.String>();
          }
          result.results_.addAll(other.results_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 18: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder();
              if (hasFault()) {
                subBuilder.mergeFrom(getFault());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFault(subBuilder.buildPartial());
              break;
            }
            case 26: {
              addResults(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .Fault fault = 2;
      public boolean hasFault() {
        return result.hasFault();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() {
        return result.getFault();
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFault = true;
        result.fault_ = value;
        return this;
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder builderForValue) {
        result.hasFault = true;
        result.fault_ = builderForValue.build();
        return this;
      }
      public Builder mergeFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (result.hasFault() &&
            result.fault_ != jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance()) {
          result.fault_ =
            jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder(result.fault_).mergeFrom(value).buildPartial();
        } else {
          result.fault_ = value;
        }
        result.hasFault = true;
        return this;
      }
      public Builder clearFault() {
        result.hasFault = false;
        result.fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
        return this;
      }
      
      // repeated string results = 3;
      public java.util.List<java.lang.String> getResultsList() {
        return java.util.Collections.unmodifiableList(result.results_);
      }
      public int getResultsCount() {
        return result.getResultsCount();
      }
      public java.lang.String getResults(int index) {
        return result.getResults(index);
      }
      public Builder setResults(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.results_.set(index, value);
        return this;
      }
      public Builder addResults(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.results_.isEmpty()) {
          result.results_ = new java.util.ArrayList<java.lang.String>();
        }
        result.results_.add(value);
        return this;
      }
      public Builder addAllResults(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.results_.isEmpty()) {
          result.results_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.results_);
        return this;
      }
      public Builder clearResults() {
        result.results_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internalForceInit();
    }
  }
  
  public static final class GetSupportedVoiceTypesRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GetSupportedVoiceTypesRequest.newBuilder() to construct.
    private GetSupportedVoiceTypesRequest() {}
    
    private static final GetSupportedVoiceTypesRequest defaultInstance = new GetSupportedVoiceTypesRequest();
    public static GetSupportedVoiceTypesRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetSupportedVoiceTypesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedVoiceTypesRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedVoiceTypesRequest_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    public final boolean isInitialized() {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internalForceInit();
    }
  }
  
  public static final class GetSupportedVoiceTypesResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GetSupportedVoiceTypesResponse.newBuilder() to construct.
    private GetSupportedVoiceTypesResponse() {}
    
    private static final GetSupportedVoiceTypesResponse defaultInstance = new GetSupportedVoiceTypesResponse();
    public static GetSupportedVoiceTypesResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetSupportedVoiceTypesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedVoiceTypesResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedVoiceTypesResponse_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    // optional .Fault fault = 2;
    public static final int FAULT_FIELD_NUMBER = 2;
    private boolean hasFault;
    private jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
    public boolean hasFault() { return hasFault; }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() { return fault_; }
    
    // repeated string results = 3;
    public static final int RESULTS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> results_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getResultsList() {
      return results_;
    }
    public int getResultsCount() { return results_.size(); }
    public java.lang.String getResults(int index) {
      return results_.get(index);
    }
    
    public final boolean isInitialized() {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasFault()) {
        if (!getFault().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      if (hasFault()) {
        output.writeMessage(2, getFault());
      }
      for (java.lang.String element : getResultsList()) {
        output.writeString(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasFault()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFault());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getResultsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getResultsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        if (result.results_ != java.util.Collections.EMPTY_LIST) {
          result.results_ =
            java.util.Collections.unmodifiableList(result.results_);
        }
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (other.hasFault()) {
          mergeFault(other.getFault());
        }
        if (!other.results_.isEmpty()) {
          if (result.results_.isEmpty()) {
            result.results_ = new java.util.ArrayList<java.lang.String>();
          }
          result.results_.addAll(other.results_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 18: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder();
              if (hasFault()) {
                subBuilder.mergeFrom(getFault());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFault(subBuilder.buildPartial());
              break;
            }
            case 26: {
              addResults(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .Fault fault = 2;
      public boolean hasFault() {
        return result.hasFault();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() {
        return result.getFault();
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFault = true;
        result.fault_ = value;
        return this;
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder builderForValue) {
        result.hasFault = true;
        result.fault_ = builderForValue.build();
        return this;
      }
      public Builder mergeFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (result.hasFault() &&
            result.fault_ != jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance()) {
          result.fault_ =
            jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder(result.fault_).mergeFrom(value).buildPartial();
        } else {
          result.fault_ = value;
        }
        result.hasFault = true;
        return this;
      }
      public Builder clearFault() {
        result.hasFault = false;
        result.fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
        return this;
      }
      
      // repeated string results = 3;
      public java.util.List<java.lang.String> getResultsList() {
        return java.util.Collections.unmodifiableList(result.results_);
      }
      public int getResultsCount() {
        return result.getResultsCount();
      }
      public java.lang.String getResults(int index) {
        return result.getResults(index);
      }
      public Builder setResults(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.results_.set(index, value);
        return this;
      }
      public Builder addResults(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.results_.isEmpty()) {
          result.results_ = new java.util.ArrayList<java.lang.String>();
        }
        result.results_.add(value);
        return this;
      }
      public Builder addAllResults(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.results_.isEmpty()) {
          result.results_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.results_);
        return this;
      }
      public Builder clearResults() {
        result.results_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internalForceInit();
    }
  }
  
  public static final class GetSupportedAudioTypesRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GetSupportedAudioTypesRequest.newBuilder() to construct.
    private GetSupportedAudioTypesRequest() {}
    
    private static final GetSupportedAudioTypesRequest defaultInstance = new GetSupportedAudioTypesRequest();
    public static GetSupportedAudioTypesRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetSupportedAudioTypesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedAudioTypesRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedAudioTypesRequest_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    public final boolean isInitialized() {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internalForceInit();
    }
  }
  
  public static final class GetSupportedAudioTypesResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GetSupportedAudioTypesResponse.newBuilder() to construct.
    private GetSupportedAudioTypesResponse() {}
    
    private static final GetSupportedAudioTypesResponse defaultInstance = new GetSupportedAudioTypesResponse();
    public static GetSupportedAudioTypesResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetSupportedAudioTypesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedAudioTypesResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internal_static_texttospeech_GetSupportedAudioTypesResponse_fieldAccessorTable;
    }
    
    // repeated .Header headers = 1;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
      return headers_.get(index);
    }
    
    // optional .Fault fault = 2;
    public static final int FAULT_FIELD_NUMBER = 2;
    private boolean hasFault;
    private jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
    public boolean hasFault() { return hasFault; }
    public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() { return fault_; }
    
    // repeated string results = 3;
    public static final int RESULTS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> results_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getResultsList() {
      return results_;
    }
    public int getResultsCount() { return results_.size(); }
    public java.lang.String getResults(int index) {
      return results_.get(index);
    }
    
    public final boolean isInitialized() {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasFault()) {
        if (!getFault().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        output.writeMessage(1, element);
      }
      if (hasFault()) {
        output.writeMessage(2, getFault());
      }
      for (java.lang.String element : getResultsList()) {
        output.writeString(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasFault()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFault());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getResultsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getResultsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse result;
      
      // Construct using jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse();
        return builder;
      }
      
      protected jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.getDescriptor();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse getDefaultInstanceForType() {
        return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        if (result.results_ != java.util.Collections.EMPTY_LIST) {
          result.results_ =
            java.util.Collections.unmodifiableList(result.results_);
        }
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse) {
          return mergeFrom((jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse other) {
        if (other == jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.getDefaultInstance()) return this;
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (other.hasFault()) {
          mergeFault(other.getFault());
        }
        if (!other.results_.isEmpty()) {
          if (result.results_.isEmpty()) {
            result.results_ = new java.util.ArrayList<java.lang.String>();
          }
          result.results_.addAll(other.results_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 18: {
              jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder subBuilder = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder();
              if (hasFault()) {
                subBuilder.mergeFrom(getFault());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFault(subBuilder.buildPartial());
              break;
            }
            case 26: {
              addResults(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated .Header headers = 1;
      public java.util.List<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Header>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .Fault fault = 2;
      public boolean hasFault() {
        return result.hasFault();
      }
      public jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault getFault() {
        return result.getFault();
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFault = true;
        result.fault_ = value;
        return this;
      }
      public Builder setFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.Builder builderForValue) {
        result.hasFault = true;
        result.fault_ = builderForValue.build();
        return this;
      }
      public Builder mergeFault(jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault value) {
        if (result.hasFault() &&
            result.fault_ != jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance()) {
          result.fault_ =
            jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.newBuilder(result.fault_).mergeFrom(value).buildPartial();
        } else {
          result.fault_ = value;
        }
        result.hasFault = true;
        return this;
      }
      public Builder clearFault() {
        result.hasFault = false;
        result.fault_ = jp.go.nict.langrid.client.protobuf.proto.CommonProtos.Fault.getDefaultInstance();
        return this;
      }
      
      // repeated string results = 3;
      public java.util.List<java.lang.String> getResultsList() {
        return java.util.Collections.unmodifiableList(result.results_);
      }
      public int getResultsCount() {
        return result.getResultsCount();
      }
      public java.lang.String getResults(int index) {
        return result.getResults(index);
      }
      public Builder setResults(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.results_.set(index, value);
        return this;
      }
      public Builder addResults(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.results_.isEmpty()) {
          result.results_ = new java.util.ArrayList<java.lang.String>();
        }
        result.results_.add(value);
        return this;
      }
      public Builder addAllResults(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.results_.isEmpty()) {
          result.results_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.results_);
        return this;
      }
      public Builder clearResults() {
        result.results_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.getDescriptor();
    }
    
    static {
      jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.internalForceInit();
    }
  }
  
  public static abstract class Service
      implements com.google.protobuf.Service {
    protected Service() {}
    
    public interface Interface {
      public abstract void speak(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse> done);
      
      public abstract void getSupportedLanguages(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse> done);
      
      public abstract void getSupportedVoiceTypes(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse> done);
      
      public abstract void getSupportedAudioTypes(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new Service() {
        @Override
        public  void speak(
            com.google.protobuf.RpcController controller,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest request,
            com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse> done) {
          impl.speak(controller, request, done);
        }
        
        @Override
        public  void getSupportedLanguages(
            com.google.protobuf.RpcController controller,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest request,
            com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse> done) {
          impl.getSupportedLanguages(controller, request, done);
        }
        
        @Override
        public  void getSupportedVoiceTypes(
            com.google.protobuf.RpcController controller,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest request,
            com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse> done) {
          impl.getSupportedVoiceTypes(controller, request, done);
        }
        
        @Override
        public  void getSupportedAudioTypes(
            com.google.protobuf.RpcController controller,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest request,
            com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse> done) {
          impl.getSupportedAudioTypes(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.speak(controller, (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest)request);
            case 1:
              return impl.getSupportedLanguages(controller, (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest)request);
            case 2:
              return impl.getSupportedVoiceTypes(controller, (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest)request);
            case 3:
              return impl.getSupportedAudioTypes(controller, (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest.getDefaultInstance();
            case 1:
              return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest.getDefaultInstance();
            case 2:
              return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest.getDefaultInstance();
            case 3:
              return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.getDefaultInstance();
            case 1:
              return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.getDefaultInstance();
            case 2:
              return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.getDefaultInstance();
            case 3:
              return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void speak(
        com.google.protobuf.RpcController controller,
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest request,
        com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse> done);
    
    public abstract void getSupportedLanguages(
        com.google.protobuf.RpcController controller,
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest request,
        com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse> done);
    
    public abstract void getSupportedVoiceTypes(
        com.google.protobuf.RpcController controller,
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest request,
        com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse> done);
    
    public abstract void getSupportedAudioTypes(
        com.google.protobuf.RpcController controller,
        jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest request,
        com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.speak(controller, (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest)request,
            com.google.protobuf.RpcUtil.<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse>specializeCallback(
              done));
          return;
        case 1:
          this.getSupportedLanguages(controller, (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest)request,
            com.google.protobuf.RpcUtil.<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse>specializeCallback(
              done));
          return;
        case 2:
          this.getSupportedVoiceTypes(controller, (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest)request,
            com.google.protobuf.RpcUtil.<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse>specializeCallback(
              done));
          return;
        case 3:
          this.getSupportedAudioTypes(controller, (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest)request,
            com.google.protobuf.RpcUtil.<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest.getDefaultInstance();
        case 1:
          return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest.getDefaultInstance();
        case 2:
          return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest.getDefaultInstance();
        case 3:
          return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.getDefaultInstance();
        case 1:
          return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.getDefaultInstance();
        case 2:
          return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.getDefaultInstance();
        case 3:
          return jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.Service implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void speak(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.class,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.getDefaultInstance()));
      }
      
      public  void getSupportedLanguages(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.class,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.getDefaultInstance()));
      }
      
      public  void getSupportedVoiceTypes(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.class,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.getDefaultInstance()));
      }
      
      public  void getSupportedAudioTypes(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest request,
          com.google.protobuf.RpcCallback<jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.class,
            jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse speak(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest request)
          throws com.google.protobuf.ServiceException;
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse getSupportedLanguages(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest request)
          throws com.google.protobuf.ServiceException;
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse getSupportedVoiceTypes(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest request)
          throws com.google.protobuf.ServiceException;
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse getSupportedAudioTypes(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse speak(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest request)
          throws com.google.protobuf.ServiceException {
        return (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.getDefaultInstance());
      }
      
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse getSupportedLanguages(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest request)
          throws com.google.protobuf.ServiceException {
        return (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.getDefaultInstance());
      }
      
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse getSupportedVoiceTypes(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest request)
          throws com.google.protobuf.ServiceException {
        return (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.getDefaultInstance());
      }
      
      
      public jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse getSupportedAudioTypes(
          com.google.protobuf.RpcController controller,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest request)
          throws com.google.protobuf.ServiceException {
        return (jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_texttospeech_SpeakRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_texttospeech_SpeakRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_texttospeech_SpeakResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_texttospeech_SpeakResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_texttospeech_GetSupportedLanguagesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_texttospeech_GetSupportedLanguagesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_texttospeech_GetSupportedLanguagesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_texttospeech_GetSupportedLanguagesResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_texttospeech_GetSupportedVoiceTypesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_texttospeech_GetSupportedVoiceTypesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_texttospeech_GetSupportedVoiceTypesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_texttospeech_GetSupportedVoiceTypesResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_texttospeech_GetSupportedAudioTypesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_texttospeech_GetSupportedAudioTypesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_texttospeech_GetSupportedAudioTypesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_texttospeech_GetSupportedAudioTypesResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022TextToSpeech.proto\022\014texttospeech\032\014comm" +
      "on.proto\"r\n\014SpeakRequest\022\030\n\007headers\030\001 \003(" +
      "\0132\007.Header\022\020\n\010language\030\002 \002(\t\022\014\n\004text\030\003 \002" +
      "(\t\022\021\n\tvoiceType\030\004 \002(\t\022\025\n\raudioTypeType\030\005" +
      " \002(\t\"u\n\rSpeakResponse\022\030\n\007headers\030\001 \003(\0132\007" +
      ".Header\022\025\n\005fault\030\002 \001(\0132\006.Fault\022\021\n\tvoiceT" +
      "ype\030\003 \001(\t\022\021\n\taudioType\030\004 \001(\t\022\r\n\005audio\030\005 " +
      "\001(\014\"8\n\034GetSupportedLanguagesRequest\022\030\n\007h" +
      "eaders\030\001 \003(\0132\007.Header\"a\n\035GetSupportedLan" +
      "guagesResponse\022\030\n\007headers\030\001 \003(\0132\007.Header",
      "\022\025\n\005fault\030\002 \001(\0132\006.Fault\022\017\n\007results\030\003 \003(\t" +
      "\"9\n\035GetSupportedVoiceTypesRequest\022\030\n\007hea" +
      "ders\030\001 \003(\0132\007.Header\"b\n\036GetSupportedVoice" +
      "TypesResponse\022\030\n\007headers\030\001 \003(\0132\007.Header\022" +
      "\025\n\005fault\030\002 \001(\0132\006.Fault\022\017\n\007results\030\003 \003(\t\"" +
      "9\n\035GetSupportedAudioTypesRequest\022\030\n\007head" +
      "ers\030\001 \003(\0132\007.Header\"b\n\036GetSupportedAudioT" +
      "ypesResponse\022\030\n\007headers\030\001 \003(\0132\007.Header\022\025" +
      "\n\005fault\030\002 \001(\0132\006.Fault\022\017\n\007results\030\003 \003(\t2\247" +
      "\003\n\007Service\022@\n\005speak\022\032.texttospeech.Speak",
      "Request\032\033.texttospeech.SpeakResponse\022p\n\025" +
      "getSupportedLanguages\022*.texttospeech.Get" +
      "SupportedLanguagesRequest\032+.texttospeech" +
      ".GetSupportedLanguagesResponse\022s\n\026getSup" +
      "portedVoiceTypes\022+.texttospeech.GetSuppo" +
      "rtedVoiceTypesRequest\032,.texttospeech.Get" +
      "SupportedVoiceTypesResponse\022s\n\026getSuppor" +
      "tedAudioTypes\022+.texttospeech.GetSupporte" +
      "dAudioTypesRequest\032,.texttospeech.GetSup" +
      "portedAudioTypesResponseB>\n(jp.go.nict.l",
      "angrid.client.protobuf.protoB\022TextToSpee" +
      "chProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_texttospeech_SpeakRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_texttospeech_SpeakRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_texttospeech_SpeakRequest_descriptor,
              new java.lang.String[] { "Headers", "Language", "Text", "VoiceType", "AudioTypeType", },
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest.class,
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakRequest.Builder.class);
          internal_static_texttospeech_SpeakResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_texttospeech_SpeakResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_texttospeech_SpeakResponse_descriptor,
              new java.lang.String[] { "Headers", "Fault", "VoiceType", "AudioType", "Audio", },
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.class,
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.SpeakResponse.Builder.class);
          internal_static_texttospeech_GetSupportedLanguagesRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_texttospeech_GetSupportedLanguagesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_texttospeech_GetSupportedLanguagesRequest_descriptor,
              new java.lang.String[] { "Headers", },
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest.class,
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesRequest.Builder.class);
          internal_static_texttospeech_GetSupportedLanguagesResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_texttospeech_GetSupportedLanguagesResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_texttospeech_GetSupportedLanguagesResponse_descriptor,
              new java.lang.String[] { "Headers", "Fault", "Results", },
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.class,
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedLanguagesResponse.Builder.class);
          internal_static_texttospeech_GetSupportedVoiceTypesRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_texttospeech_GetSupportedVoiceTypesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_texttospeech_GetSupportedVoiceTypesRequest_descriptor,
              new java.lang.String[] { "Headers", },
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest.class,
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesRequest.Builder.class);
          internal_static_texttospeech_GetSupportedVoiceTypesResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_texttospeech_GetSupportedVoiceTypesResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_texttospeech_GetSupportedVoiceTypesResponse_descriptor,
              new java.lang.String[] { "Headers", "Fault", "Results", },
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.class,
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedVoiceTypesResponse.Builder.class);
          internal_static_texttospeech_GetSupportedAudioTypesRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_texttospeech_GetSupportedAudioTypesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_texttospeech_GetSupportedAudioTypesRequest_descriptor,
              new java.lang.String[] { "Headers", },
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest.class,
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesRequest.Builder.class);
          internal_static_texttospeech_GetSupportedAudioTypesResponse_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_texttospeech_GetSupportedAudioTypesResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_texttospeech_GetSupportedAudioTypesResponse_descriptor,
              new java.lang.String[] { "Headers", "Fault", "Results", },
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.class,
              jp.go.nict.langrid.client.protobuf.proto.TextToSpeechProtos.GetSupportedAudioTypesResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          jp.go.nict.langrid.client.protobuf.proto.CommonProtos.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
