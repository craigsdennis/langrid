<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    version="2.5">

   <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/applicationContext*.xml</param-value>
   </context-param>

   <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
   </listener>
   <listener>
      <listener-class>org.apache.axis.transport.http.AxisHTTPSessionListener</listener-class>
   </listener>

   <filter>
      <filter-name>ServiceManagerFilter</filter-name>
      <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
      <init-param>
         <param-name>applicationFactoryClassName</param-name>
         <param-value>org.apache.wicket.spring.SpringWebApplicationFactory</param-value>
      </init-param>
      <init-param>
         <param-name>configuration</param-name>
         <param-value>deployment</param-value>
      </init-param>
   </filter>
   <filter-mapping>
      <filter-name>ServiceManagerFilter</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>

   <filter>
      <filter-name>FederationAuthenticator</filter-name>
      <filter-class>jp.go.nict.langrid.servlet.filter.auth.langrid.FederationAuthenticator</filter-class>
   </filter>
   <filter-mapping>
      <filter-name>FederationAuthenticator</filter-name>
      <url-pattern>/invoker/*</url-pattern>
      <url-pattern>/federation/*</url-pattern>
      <url-pattern>/HttpMessageServlet</url-pattern>
   </filter-mapping>

   <filter>
      <filter-name>MirrorNodeAuthenticator</filter-name>
      <filter-class>jp.go.nict.langrid.servlet.filter.auth.langrid.MirrorNodeAuthenticator</filter-class>
   </filter>
   <filter-mapping>
      <filter-name>MirrorNodeAuthenticator</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>

   <filter>
      <filter-name>LangridAuthenticator</filter-name>
      <filter-class>jp.go.nict.langrid.servlet.filter.auth.langrid.LangridAuthenticator</filter-class>
   </filter>
   <filter-mapping>
      <filter-name>LangridAuthenticator</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>

   <filter>
      <filter-name>SimpleAppAuth</filter-name>
      <filter-class>jp.go.nict.langrid.servlet.filter.auth.ApplicationAuthenticator</filter-class>
      <init-param>
         <param-name>parameterPrefix</param-name>
         <param-value>appAuth.simpleApp.</param-value>
      </init-param>
   </filter>
   <filter-mapping>
      <filter-name>SimpleAppAuth</filter-name>
      <url-pattern>/invoker/*</url-pattern>
   </filter-mapping>

   <filter>
      <filter-name>RichAppAuth</filter-name>
      <filter-class>jp.go.nict.langrid.servlet.filter.auth.ApplicationAuthenticator</filter-class>
      <init-param>
         <param-name>parameterPrefix</param-name>
         <param-value>appAuth.richApp.</param-value>
      </init-param>
   </filter>
   <filter-mapping>
      <filter-name>RichAppAuth</filter-name>
      <url-pattern>/invoker/*</url-pattern>
      <url-pattern>/services/Authentication</url-pattern>
      <url-pattern>/services/ServiceManagement</url-pattern>
      <url-pattern>/services/ServiceAccessLimitManagement</url-pattern>
      <url-pattern>/services/ServiceAccessRightManagement</url-pattern>
   </filter-mapping>

   <filter>
      <filter-name>TemporaryUserAuthenticator</filter-name>
      <filter-class>jp.go.nict.langrid.servlet.filter.auth.langrid.TemporaryUserAuthenticator</filter-class>
   </filter>
   <filter-mapping>
      <filter-name>TemporaryUserAuthenticator</filter-name>
      <url-pattern>/invoker/*</url-pattern>
      <url-pattern>/services/Authentication</url-pattern>
   </filter-mapping>

   <filter>
      <filter-name>SentinelAuthenticator</filter-name>
      <filter-class>jp.go.nict.langrid.servlet.filter.auth.SentinelAuthenticator</filter-class>
   </filter>
   <filter-mapping>
      <filter-name>SentinelAuthenticator</filter-name>
      <url-pattern>/invoker/*</url-pattern>
      <url-pattern>/services</url-pattern>
      <url-pattern>/services/*</url-pattern>
      <url-pattern>/federation/*</url-pattern>
      <url-pattern>/HttpMessageServlet</url-pattern>
   </filter-mapping>

   <filter>
      <filter-name>MostPopularServiceSelector</filter-name>
      <filter-class>jp.go.nict.langrid.servicesupervisor.advancedcontrol.filter.ServiceAutoSelector</filter-class>
      <init-param><param-name>mode</param-name><param-value>MOST_POPULAR</param-value></init-param>
      <init-param><param-name>prefix</param-name><param-value>MostPopular</param-value></init-param>
   </filter>
   <filter-mapping>
      <filter-name>MostPopularServiceSelector</filter-name>
      <url-pattern>/invoker/*</url-pattern>
   </filter-mapping>

   <filter>
      <filter-name>FastestServiceSelector</filter-name>
      <filter-class>jp.go.nict.langrid.servicesupervisor.advancedcontrol.filter.ServiceAutoSelector</filter-class>
      <init-param><param-name>mode</param-name><param-value>FASTEST</param-value></init-param>
      <init-param><param-name>prefix</param-name><param-value>Fastest</param-value></init-param>
   </filter>
   <filter-mapping>
      <filter-name>FastestServiceSelector</filter-name>
      <url-pattern>/invoker/*</url-pattern>
   </filter-mapping>

   <filter>
      <filter-name>InvocationProcessor</filter-name>
      <filter-class>jp.go.nict.langrid.servicesupervisor.StreamingServiceSupervisor</filter-class>
   </filter>
   <filter-mapping>
      <filter-name>InvocationProcessor</filter-name>
      <url-pattern>/invoker/*</url-pattern>
   </filter-mapping>

   <servlet>
      <servlet-name>NodeInitializer</servlet-name>
      <servlet-class>jp.go.nict.langrid.servlet.initialize.NodeInitializer</servlet-class>
      <load-on-startup>10</load-on-startup>
   </servlet>

   <servlet>
      <servlet-name>InvocationExecutor</servlet-name>
      <servlet-class>jp.go.nict.langrid.servicesupervisor.invocationprocessor.InvocationProcessor</servlet-class>
      <load-on-startup>100</load-on-startup>
   </servlet>
   <servlet-mapping>
      <servlet-name>InvocationExecutor</servlet-name>
      <url-pattern>/invoker/*</url-pattern>
   </servlet-mapping>

   <servlet>
      <servlet-name>ExceptionServlet</servlet-name>
      <servlet-class>jp.go.nict.langrid.foundation.servlet.ExceptionServlet</servlet-class>
      <load-on-startup>100</load-on-startup>
   </servlet>
   <servlet-mapping>
      <servlet-name>ExceptionServlet</servlet-name>
      <url-pattern>/exception/*</url-pattern>
   </servlet-mapping>

   <servlet>
      <servlet-name>WSDLGeneratorServlet</servlet-name>
      <servlet-class>jp.go.nict.langrid.foundation.servlet.WSDLGeneratorServlet</servlet-class>
   </servlet>
   <servlet-mapping>
      <servlet-name>WSDLGeneratorServlet</servlet-name>
      <url-pattern>/services</url-pattern>
      <url-pattern>/wsdl/*</url-pattern>
   </servlet-mapping>

   <servlet>
      <servlet-name>AxisServlet</servlet-name>
      <servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
   </servlet>
   <servlet-mapping>
      <servlet-name>AxisServlet</servlet-name>
      <url-pattern>/services/*</url-pattern>
      <url-pattern>/servlet/AxisServlet/*</url-pattern>
      <url-pattern>*.jws</url-pattern>
   </servlet-mapping>

   <!-- uncomment this if you want the admin servlet -->
   <servlet>
      <servlet-name>AdminServlet</servlet-name>
      <servlet-class>org.apache.axis.transport.http.AdminServlet</servlet-class>
      <load-on-startup>100</load-on-startup>
   </servlet>
   <servlet-mapping>
     <servlet-name>AdminServlet</servlet-name>
     <url-pattern>/servlet/AdminServlet</url-pattern>
   </servlet-mapping>

   <servlet>
      <servlet-name>SOAPMonitorService</servlet-name>
      <servlet-class>org.apache.axis.monitor.SOAPMonitorService</servlet-class>
      <init-param>
        <param-name>SOAPMonitorPort</param-name>
        <param-value>5001</param-value>
      </init-param>
      <load-on-startup>100</load-on-startup>
   </servlet>
   <servlet-mapping>
      <servlet-name>SOAPMonitorService</servlet-name>
      <url-pattern>/SOAPMonitor</url-pattern>
   </servlet-mapping>

   <servlet>
      <servlet-name>RunPlatform</servlet-name>
      <servlet-class>jp.go.nict.langrid.p2pgridbasis.jxta.servlet.RunPlatform</servlet-class>
      <load-on-startup>50</load-on-startup>
   </servlet>
   <servlet-mapping>
      <servlet-name>RunPlatform</servlet-name>
      <url-pattern>/servlet/RunPlatform</url-pattern>
   </servlet-mapping>

   <servlet>
      <servlet-name>RdvStatus</servlet-name>
      <servlet-class>jp.go.nict.langrid.p2pgridbasis.jxta.servlet.RdvStatus</servlet-class>
   </servlet>
   <servlet-mapping>
       <servlet-name>RdvStatus</servlet-name>
       <url-pattern>/RdvStatus</url-pattern>
   </servlet-mapping>

   <servlet>
      <servlet-name>RdvPeer</servlet-name>
      <servlet-class>jp.go.nict.langrid.p2pgridbasis.jxta.servlet.RdvPeer</servlet-class>
   </servlet>
   <servlet-mapping>
      <servlet-name>RdvPeer</servlet-name>
      <url-pattern>/RdvPeer</url-pattern>
   </servlet-mapping>
   
   <servlet>
      <servlet-name>HttpMessageServlet</servlet-name>
      <servlet-class>net.jxta.impl.endpoint.servlethttp.HttpMessageServlet</servlet-class>
      <load-on-startup>1</load-on-startup>
   </servlet>
   <servlet-mapping>
      <servlet-name>HttpMessageServlet</servlet-name>
      <url-pattern>/HttpMessageServlet</url-pattern>
      <url-pattern>/HttpMessageServlet/*</url-pattern>
   </servlet-mapping>

   <servlet>
      <servlet-name>FederationRequestServlet</servlet-name>
      <servlet-class>jp.go.nict.langrid.servlet.federation.FederationRequestServlet</servlet-class>
   </servlet>
   <servlet-mapping>
      <servlet-name>FederationRequestServlet</servlet-name>
      <url-pattern>/federation/request</url-pattern>
   </servlet-mapping>

   <servlet>
      <servlet-name>FederationResponseServlet</servlet-name>
      <servlet-class>jp.go.nict.langrid.servlet.federation.FederationResponseServlet</servlet-class>
<!--
      <init-param>
         <param-name>autoApproveEnabled</param-name>
         <param-value>true</param-value>
      </init-param>
-->
   </servlet>
   <servlet-mapping>
      <servlet-name>FederationResponseServlet</servlet-name>
      <url-pattern>/federation/response</url-pattern>
   </servlet-mapping>

   <session-config>
      <!-- Default to 5 minute session timeouts -->
      <session-timeout>120</session-timeout>
   </session-config>

   <!-- currently the W3C havent settled on a media type for WSDL;
   http://www.w3.org/TR/2003/WD-wsdl12-20030303/#ietf-draft
   for now we go with the basic 'it's XML' response -->
   <mime-mapping>
      <extension>wsdl</extension>
      <mime-type>text/xml</mime-type>
   </mime-mapping>
   <mime-mapping>
      <extension>xsd</extension>
      <mime-type>text/xml</mime-type>
   </mime-mapping>

   <welcome-file-list>
      <welcome-file>index.html</welcome-file>
      <welcome-file>index.jsp</welcome-file>
   </welcome-file-list>
</web-app>
